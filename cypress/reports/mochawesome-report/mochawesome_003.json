{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-02-25T09:32:34.332Z",
    "end": "2025-02-25T09:32:34.496Z",
    "duration": 164,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ce6de9e8-e596-4c12-a994-21c146693954",
      "title": "",
      "fullFile": "cypress\\e2e\\Tests\\API\\scenario3CreateUser.cy.js",
      "file": "cypress\\e2e\\Tests\\API\\scenario3CreateUser.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "70c53650-eb4e-4047-b762-fb0bc8f6fae4",
          "title": "Create a user",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User Creation",
              "fullTitle": "Create a user User Creation",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: userCreationURL,\n  method: 'POST',\n  body: {\n    \"name\": \"morpheus\",\n    \"job\": \"leader\"\n  }\n}).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body.name).to.equal('morpheus');\n  expect(response.body.job).to.equal('leader');\n  expect(response.body).to.have.property('id');\n  const createdAt = response.body.createdAt;\n  const formattedDate = createdAt.split('T')[0].replace(/-/g, '/'); // YYYY-MM-DD -> YYYY/MM/DD\n  const expectedDate = new Date().toISOString().split('T')[0].replace(/-/g, '/'); // We are getting \"createdAt\" in this format: \"createdAt\": \"2025-02-22T08:33:07.664Z\" to make today's date in this format: \"YYYY/MM/DD\", I used \"split method\"\n  expect(formattedDate).to.equal(expectedDate); // Compare the dates\n});",
              "err": {},
              "uuid": "9112f80b-4263-4392-86e1-747fdf644bf0",
              "parentUUID": "70c53650-eb4e-4047-b762-fb0bc8f6fae4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9112f80b-4263-4392-86e1-747fdf644bf0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 128,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome-report",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}